// default package
// Generated 16 lip 2019, 17:05:28 by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * Locations generated by hbm2java
 */
@Entity
@Table(name = "locations", catalog = "db_warehouse", uniqueConstraints = @UniqueConstraint(columnNames = { "area_id",
		"rack_id", "shelf_id" }))
public class Locations implements java.io.Serializable {

	private Integer locationId;
	private Areas areas;
	private Racks racks;
	private int shelfId;
	private Set partses = new HashSet(0);

	public Locations() {
	}

	public Locations(Areas areas, Racks racks, int shelfId) {
		this.areas = areas;
		this.racks = racks;
		this.shelfId = shelfId;
	}

	public Locations(Areas areas, Racks racks, int shelfId, Set partses) {
		this.areas = areas;
		this.racks = racks;
		this.shelfId = shelfId;
		this.partses = partses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "location_id", unique = true, nullable = false)
	public Integer getLocationId() {
		return this.locationId;
	}

	public void setLocationId(Integer locationId) {
		this.locationId = locationId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "area_id", nullable = false)
	public Areas getAreas() {
		return this.areas;
	}

	public void setAreas(Areas areas) {
		this.areas = areas;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rack_id", nullable = false)
	public Racks getRacks() {
		return this.racks;
	}

	public void setRacks(Racks racks) {
		this.racks = racks;
	}

	@Column(name = "shelf_id", nullable = false)
	public int getShelfId() {
		return this.shelfId;
	}

	public void setShelfId(int shelfId) {
		this.shelfId = shelfId;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "locations")
	public Set getPartses() {
		return this.partses;
	}

	public void setPartses(Set partses) {
		this.partses = partses;
	}

}
