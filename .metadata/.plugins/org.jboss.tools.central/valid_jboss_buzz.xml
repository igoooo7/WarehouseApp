<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>DevNation Live: 17-million downloads of Visual Studio Code Java extension</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/5OXGgi2HvJI/" /><category term="VS Code" /><category term="DevNation" /><category term="Java" /><category term="Visual Studio Code" /><author><name>Editorial Team</name></author><id>https://developers.redhat.com/blog/?p=612307</id><updated>2019-07-17T07:00:44Z</updated><published>2019-07-17T07:00:44Z</published><content type="html">&lt;p&gt;&lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;DevNation Live tech talks&lt;/a&gt; are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about Visual Studio Code from &lt;a href="https://developers.redhat.com/blog/author/bdavis/"&gt;Bob Davis&lt;/a&gt;, Principal Product Manager in Red Hat’s Developer Tools Group.&lt;span id="more-612307"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;Did you know that &lt;a href="https://developers.redhat.com/blog/category/vs-code/"&gt;Visual Studio Code&lt;/a&gt; is free and open source? We have already seen more than 17-million downloads of the &lt;a href="https://developers.redhat.com/topics/enterprise-java/"&gt;Java&lt;/a&gt; extensions for this ultra-lightweight IDE, making Visual Studio Code one of the fastest growing software development tools in recent months.&lt;/p&gt; &lt;p&gt;In this session, we are going to show you how to get started and how to get rocking with Visual Studio Code from installation to extensions, CLI integration, maven dependencies, debugging, and much more.&lt;/p&gt; &lt;p&gt;Watch the entire talk:&lt;br /&gt; &lt;iframe src="https://www.youtube.com/embed/_AcjWfY5cfc" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Learn more&lt;/h3&gt; &lt;p&gt;Join us at an upcoming &lt;a href="https://developers.redhat.com/events/"&gt;developer event&lt;/a&gt;, and see our collection of &lt;a href="https://developers.redhat.com/devnation/?page=0"&gt;past DevNation Live tech talks&lt;/a&gt;&lt;a href="https://developers.redhat.com/events/"&gt;.&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#38;linkname=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fdevnation-live-17-million-downloads-of-visual-studio-code-java-extension%2F&amp;#038;title=DevNation%20Live%3A%2017-million%20downloads%20of%20Visual%20Studio%20Code%20Java%20extension" data-a2a-url="https://developers.redhat.com/blog/2019/07/17/devnation-live-17-million-downloads-of-visual-studio-code-java-extension/" data-a2a-title="DevNation Live: 17-million downloads of Visual Studio Code Java extension"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/17/devnation-live-17-million-downloads-of-visual-studio-code-java-extension/"&gt;DevNation Live: 17-million downloads of Visual Studio Code Java extension&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/5OXGgi2HvJI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;DevNation Live tech talks are hosted by the Red Hat technologists who create our products. These sessions include real solutions and code and sample projects to help you get started. In this talk, you’ll learn about Visual Studio Code from Bob Davis, Principal Product Manager in Red Hat’s Developer Tools Group. Did you know that [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/17/devnation-live-17-million-downloads-of-visual-studio-code-java-extension/"&gt;DevNation Live: 17-million downloads of Visual Studio Code Java extension&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/17/devnation-live-17-million-downloads-of-visual-studio-code-java-extension/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">612307</post-id><dc:creator>Editorial Team</dc:creator><dc:date>2019-07-17T07:00:44Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/17/devnation-live-17-million-downloads-of-visual-studio-code-java-extension/</feedburner:origLink></entry><entry><title>Executing .NET Core functions in a separate process</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/LT_pPdpFfLQ/" /><category term=".NET Core" /><author><name>Tom Deseyn</name></author><id>https://developers.redhat.com/blog/?p=609757</id><updated>2019-07-17T07:00:05Z</updated><published>2019-07-17T07:00:05Z</published><content type="html">&lt;p&gt;In this article, we&amp;#8217;ll take a look at &lt;code&gt;&lt;a href="https://github.com/tmds/Tmds.ExecFunction" target="_blank" rel="noopener noreferrer"&gt;Tmds.ExecFunction&lt;/a&gt;&lt;/code&gt;, which is a library that allows developers to easily execute a .NET Core function in a separate process.&lt;/p&gt; &lt;h2&gt;Use cases&lt;/h2&gt; &lt;p&gt;Before we get to the code, let&amp;#8217;s cover a few scenarios where it makes sense to execute a function as a separate process. Processes have some global state, like environment variables and the working directory. Most of the time, this global state doesn&amp;#8217;t cause issues: When it is meaningful, libraries provide an API that allows the user to override the values. For testing, though, it&amp;#8217;s a different story. To verify the application is properly using the global state as a default, we need to modify it. This factor is an issue because the state is shared with the test host process and the other tests running in that process. We can solve this issue by running code in a separate process that we can fully control.&lt;/p&gt; &lt;p&gt;The second class of use cases occurs when we want code to run with a different lifetime from the parent process. For example, suppose we want to start a process and ensure it doesn&amp;#8217;t outlive the .NET parent (even on crashes). We could do this by putting a small process in between that monitors the parent, and kills the child when the parent has terminated. Another example is to implement &lt;a href="http://thelinuxjedi.blogspot.com/2014/02/why-use-double-fork-to-daemonize.html" target="_blank" rel="noopener noreferrer"&gt;double forking&lt;/a&gt;, which is used in script-based &lt;code&gt;init&lt;/code&gt; managers to make sure the daemon outlives the shell that launched it. Most distributions (like &lt;a href="https://getfedora.org/" target="_blank" rel="noopener noreferrer"&gt;Fedora&lt;/a&gt; and &lt;a href="https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux" target="_blank" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux&lt;/a&gt;) are now using &lt;code&gt;systemd&lt;/code&gt; as their &lt;code&gt;init&lt;/code&gt; manager, which doesn&amp;#8217;t need daemons to double fork.&lt;/p&gt; &lt;h2&gt;&lt;code&gt;Tmds.ExecFunction&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;&lt;code&gt;Tmds.ExecFunction&lt;/code&gt; is a library inspired by .NET Core&amp;#8217;s &lt;code&gt;&lt;a href="https://github.com/dotnet/arcade/tree/6a34948f7bdbc3ceb2fb16441b49f7748a462646/src/Microsoft.DotNet.RemoteExecutor/src/Microsoft.DotNet.RemoteExecutor" target="_blank" rel="noopener noreferrer"&gt;RemoteExecutor&lt;/a&gt;&lt;/code&gt;, which is used in &lt;a href="https://github.com/dotnet/corefx/" target="_blank" rel="noopener noreferrer"&gt;.NET Core&amp;#8217;s class library&lt;/a&gt; for writing tests that need a separate process. This library is available on &lt;a href="https://www.nuget.org" target="_blank" rel="noopener noreferrer"&gt;NuGet.org&lt;/a&gt;, so we can add it to our project using:&lt;/p&gt; &lt;pre&gt;dotnet add package Tmds.ExecFunction&lt;/pre&gt; &lt;p&gt;Now, let&amp;#8217;s use it:&lt;/p&gt; &lt;pre&gt;ExecFunction.Run(() =&amp;#62; Console.WriteLine("Hello world!"));&lt;/pre&gt; &lt;p&gt;We are using &lt;code&gt;ExecFunction.Run&lt;/code&gt; and passing it a lambda that prints &lt;code&gt;Hello world!&lt;/code&gt; That lambda is executed in a separate process. The &lt;code&gt;Run&lt;/code&gt; method then returns when the child has terminated. &lt;code&gt;ExecFunction&lt;/code&gt; also provides a &lt;code&gt;Start&lt;/code&gt; method that returns a &lt;code&gt;System.Diagnostics.Process&lt;/code&gt; and then returns immediately when the process starts. A &lt;code&gt;RunAsync&lt;/code&gt; method is also provided, which returns a &lt;code&gt;Task&lt;/code&gt; that completes when the process terminates.&lt;/p&gt; &lt;p&gt;The function we pass can have a .NET &lt;code&gt;Main&lt;/code&gt; signature: a &lt;code&gt;void&lt;/code&gt;/&lt;code&gt;string[]&lt;/code&gt; argument and a &lt;code&gt;void&lt;/code&gt;/&lt;code&gt;int&lt;/code&gt;/&lt;code&gt;Task&lt;/code&gt;/&lt;code&gt;Task&lt;/code&gt; return type.&lt;/p&gt; &lt;p&gt;For example, we can pass some arguments:&lt;/p&gt; &lt;pre&gt;ExecFunction.Run( (string[] args) =&amp;#62; Console.WriteLine($"Hello {args[0]}"), new string[] { "world!" }); &lt;/pre&gt; &lt;p&gt;We can also control the environment variables, working directory, etc. by passing a configuration function:&lt;/p&gt; &lt;pre&gt;ExecFunction.Run( () =&amp;#62; Console.WriteLine($"HOME={Environment.GetEnvironmentVariable("HOME")}"), o =&amp;#62; o.StartInfo.Environment["HOME"] = "/tmp"); &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;FunctionExecutor&lt;/code&gt; class makes it easy to reuse the same configuration for multiple invocations, as well. For example, we can use it as follows in &lt;a href="https://xunit.net/" target="_blank" rel="noopener noreferrer"&gt;xUnit&lt;/a&gt; tests:&lt;/p&gt; &lt;pre&gt;private FunctionExecutor Executor = new FunctionExecutor( o =&amp;#62; { o.StartInfo.RedirectStandardError = true; o.OnExit = p =&amp;#62; { if (p.ExitCode != 0) { string message = $"Function execution failed with exit code: {p.ExitCode}" + Environment.NewLine + p.StandardError.ReadToEnd(); throw new Xunit.Sdk.XunitException(message); } }; }); [Fact] public void Test() { Executor.Run( () =&amp;#62; { Assert.Equal("/tmp", Environment.GetEnvironmentVariable("HOME")); }, o =&amp;#62; o.StartInfo.Environment["HOME"] = "/tmp" ); } &lt;/pre&gt; &lt;p&gt;So far, we’ve been assuming you use the &lt;code&gt;dotnet&lt;/code&gt; executable to host your application; for example, by starting xUnit tests using &lt;code&gt;dotnet test&lt;/code&gt;. To make &lt;code&gt;ExecuteFunction&lt;/code&gt; work from an application host (that is, you built your application into a native binary), we need to add a hook in the &lt;code&gt;Main&lt;/code&gt; function:&lt;/p&gt; &lt;pre&gt;static int Main(string[] args) { if (ExecFunction.IsExecFunctionCommand(args)) { return ExecFunction.Program.Main(args); } else { ExecFunction.Run(() =&amp;#62; System.Console.WriteLine("Hello world!")); return 0; } } &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we&amp;#8217;ve shown how to execute .NET Core code easily in a separate process using &lt;code&gt;&lt;a href="https://github.com/tmds/Tmds.ExecFunction" target="_blank" rel="noopener noreferrer"&gt;Tmds.ExecFunction&lt;/a&gt;&lt;/code&gt;, and when doing so can be useful. Now, explore what you can make this library do.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#38;linkname=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F17%2Fexecuting-net-core-functions-in-a-separate-process%2F&amp;#038;title=Executing%20.NET%20Core%20functions%20in%20a%20separate%20process" data-a2a-url="https://developers.redhat.com/blog/2019/07/17/executing-net-core-functions-in-a-separate-process/" data-a2a-title="Executing .NET Core functions in a separate process"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/17/executing-net-core-functions-in-a-separate-process/"&gt;Executing .NET Core functions in a separate process&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/LT_pPdpFfLQ" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, we&amp;#8217;ll take a look at Tmds.ExecFunction, which is a library that allows developers to easily execute a .NET Core function in a separate process. Use cases Before we get to the code, let&amp;#8217;s cover a few scenarios where it makes sense to execute a function as a separate process. Processes have some [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/17/executing-net-core-functions-in-a-separate-process/"&gt;Executing .NET Core functions in a separate process&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/17/executing-net-core-functions-in-a-separate-process/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">609757</post-id><dc:creator>Tom Deseyn</dc:creator><dc:date>2019-07-17T07:00:05Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/17/executing-net-core-functions-in-a-separate-process/</feedburner:origLink></entry><entry><title>Report from the February 2019 ISO C++ meeting (Library)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/huDWj-1Xz8E/" /><category term="C++" /><category term="Programming Languages" /><category term="c++" /><category term="gcc" /><category term="standards" /><author><name>Jonathan Wakely</name></author><id>https://developers.redhat.com/blog/?p=610277</id><updated>2019-07-16T07:00:57Z</updated><published>2019-07-16T07:00:57Z</published><content type="html">&lt;p&gt;Back in February, I attended the &lt;a href="https://isocpp.org/std/meetings-and-participation/upcoming-meetings"&gt;WG21 C++ standards committee meeting&lt;/a&gt; in rainy Kona, Hawaii (yes, it rained most of the week). This report is so late that we&amp;#8217;re now preparing for the next meeting, which will take place mid-July in Cologne.&lt;/p&gt; &lt;p&gt;As usual, I spent the majority of my time in the Library Working Group (for LWG; for details on the various Working Groups and Study Groups see &lt;a href="https://isocpp.org/std/the-committee"&gt;Standard C++: The Committee&lt;/a&gt;). The purpose of the LWG is to formalize the specification of the C++ Standard Library, i.e. the second &amp;#8220;half&amp;#8221; of the C++ standard (although in terms of page count it&amp;#8217;s closer to three quarters than half). With a new C++20 standard on the horizon, and lots of new features that people want added to the standard library, the LWG has been very busy trying to process the backlog of new proposals forwarded by the Library Evolution Working Group (LEWG).&lt;span id="more-610277"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;One of the main tasks at the Kona meeting was to review the &amp;#8220;&lt;a href="https://wg21.link/P1252R2"&gt;Ranges Design Cleanup&lt;/a&gt;&amp;#8221; proposal. The cleanup involves a number of fixes and improvements to the new Ranges library, addressing issues that came up during the review of the previous (much larger) proposal to add the Ranges library, which is one of the biggest additions to the C++20 library (most of the other significant additions to C++20 affect the core language, without much library impact). In fact, I&amp;#8217;d say it&amp;#8217;s one of the biggest additions to the C++ standard library since the first standard in 1998. The Ranges library work overhauls the parts of the standard that originated in the Standard Template Library (STL), i.e. iterators, algorithms, and containers, to re-specify them in terms of C++ Concepts. This has been a multi-year effort that has now landed in the C++20 working draft, following multiple proposals and several meetings of wording review by LWG.&lt;/p&gt; &lt;p&gt;Another item on the agenda was the &lt;a href="https://wg21.link/P1135R2"&gt;C++20 Synchronization Library&lt;/a&gt;. This is an omnibus paper that combines several earlier proposals for new synchronization primitives, such as waiting on atomic variables, semaphores, and latches and barriers. Because it&amp;#8217;s a combination of proposals written by different authors at different times, the wording is quite inconsistent and different parts of the proposal try to say the same thing in completely different ways. We found numerous issues with the wording and asked the authors to revise the proposal and bring it back. Personally, I think it&amp;#8217;s unfortunate that the independent proposals were combined because some parts are in good shape and could have moved forward, but now everything in the proposal is waiting for a few pieces to be fixed.&lt;/p&gt; &lt;p&gt;We also spent a good chunk of time reviewing &amp;#8220;&lt;a href="https://wg21.link/P0429R7"&gt;A Standard &lt;code&gt;flat_map&lt;/code&gt;&lt;/a&gt;.&amp;#8221; This is a proposal for a new container that has a similar API to &lt;code&gt;std::map&lt;/code&gt; but stores the data in an array-like structure rather than a binary tree. The current proposal is for a container adaptor, so that you can create a flat_map from a &lt;code&gt;std::vector&lt;/code&gt;, or &lt;code&gt;std::deque&lt;/code&gt;, or other container. Since the first version, the proposal has been altered so that a &lt;code&gt;flat_map&lt;/code&gt; uses separate containers for the keys and the values; thus, all the keys are packed together into one array and all the values into another, improving the locality of reference for the keys. The downside of splitting the keys and values is that it&amp;#8217;s trickier to specify, and the LWG review revealed lots of exception safety issues. We made numerous improvements to the wording and clarified what the implementation can guarantee in corner cases. In some cases, if an operation fails, the only reasonable way to preserve the invariants is to clear the container completely to restore it to a known state. I&amp;#8217;m not convinced that the advantage of separating keys and values outweighs the disadvantages. An updated proposal will be reviewed again by LWG, and I&amp;#8217;m pleased to see the paper &amp;#8220;&lt;a href="https://wg21.link/P1727R0"&gt;Issues with current &lt;code&gt;flat_map&lt;/code&gt; proposal&lt;/a&gt;&amp;#8221; in the most recent mailing, which discusses some of the disadvantages of the current design.&lt;/p&gt; &lt;h2&gt;Mandating the Standard Library&lt;/h2&gt; &lt;p&gt;At the Kona meeting, and between meetings, we&amp;#8217;ve also been reviewing a series of proposals by Marshall Clow (the LWG chair) all on the same topic, &amp;#8220;Mandating the Standard Library&amp;#8221; (this is a pun on the fact that we now use the label &amp;#8220;&lt;em&gt;Mandates&lt;/em&gt;&amp;#8221; in the specification to describe statically enforced preconditions). This is a topic dear to my heart as I wrote the first attempt to address this topic four years ago, in &amp;#8220;&lt;a href="https://wg21.link/P0411R0"&gt;Separating Library Requirements and Preconditions&lt;/a&gt;.&amp;#8221; The aim is to recategorize every precondition in the standard library so that those which can be statically checked and enforced at compile time will result in compilation failure rather than arbitrary undefined behavior. Historically, the standard library simply says it&amp;#8217;s undefined to violate most of its preconditions, even though in practice violating a requirement such as &amp;#8220;the template argument T is CopyConstructible&amp;#8221; will fail to compile, rather than invoke the dreaded &amp;#8220;undefined behavior.&amp;#8221;&lt;/p&gt; &lt;p&gt;In the next version of the standard, users will be able to clearly distinguish requirements that will cause compilation failure from preconditions that must be met to avoid your printer catching fire or demons flying out of your nose. In Kona, we reviewed the first papers in the series, covering &lt;a href="https://wg21.link/P1458R1"&gt;Clause 16 &amp;#8211; Language support library&lt;/a&gt;, &lt;a href="https://wg21.link/P1459R1"&gt;Clause 18 &amp;#8211; Diagnostics library&lt;/a&gt;, &lt;a href="https://wg21.link/P1462R1"&gt;Clause 20 &amp;#8211; Strings library&lt;/a&gt;, &lt;a href="https://wg21.link/P1463R1"&gt;Clause 21 &amp;#8211; Containers library&lt;/a&gt;, and &lt;a href="https://wg21.link/P1464R1"&gt;Clause 22 &amp;#8211; Iterators library&lt;/a&gt;. At the upcoming Cologne meeting, we&amp;#8217;ll be reviewing papers to do the same thing for &lt;a href="https://wg21.link/P1505R1"&gt;Atomics operations&lt;/a&gt;, &lt;a href="https://wg21.link/P1622R1"&gt;Thread support&lt;/a&gt;, the &lt;a href="https://wg21.link/P1686R0"&gt;Time library&lt;/a&gt;, &lt;a href="https://wg21.link/P1718R0"&gt;Algorithms&lt;/a&gt;, &lt;a href="https://wg21.link/P1719R0"&gt;Numerics&lt;/a&gt;, &lt;a href="https://wg21.link/P1720R0"&gt;Localization&lt;/a&gt;, &lt;a href="https://wg21.link/P1721R0"&gt;I/O&lt;/a&gt;, &lt;a href="https://wg21.link/P1722R0"&gt;Regular expressions&lt;/a&gt;, and &lt;a href="https://wg21.link/P1723R0"&gt;Atomic&lt;/a&gt; operations (yes, there are two papers for this clause—due to miscommunication by the authors—so now we get to see if they&amp;#8217;ve proposed the same fixes). If we get through all of those in Cologne, that should be all the library clauses covered. Then we just need to make sure that new proposals use the new specification style, so we don&amp;#8217;t add back any of the old &amp;#8220;everything is undefined behavior!&amp;#8221; preconditions.&lt;/p&gt; &lt;p&gt;We also reviewed (and approved) &amp;#8220;&lt;a href="https://wg21.link/P0811R3"&gt;Well-behaved interpolation for numbers and pointers&lt;/a&gt;,&amp;#8221; which adds &lt;code&gt;std::midpoint&lt;/code&gt; and &lt;code&gt;std::lerp&lt;/code&gt; to the library. These functions are surprisingly hard to get right for all the corner cases, and discussions continued long after the meeting about how to implement them. The fact that even domain experts (and non-experts trying to implement them, like me) struggled to get them right makes them perfect candidates for inclusion in the standard library. It&amp;#8217;s better to have a few compiler vendors deal with the problem once, rather than having thousands of users write them again and again, either creating subtle bugs or duplicating effort to deal with all the gotchas properly.&lt;/p&gt; &lt;p&gt;We also reviewed (and approved) &amp;#8220;&lt;a href="https://wg21.link/P1227R2"&gt;Signed &lt;code&gt;ssize()&lt;/code&gt; functions, unsigned &lt;code&gt;size()&lt;/code&gt; functions&lt;/a&gt;&amp;#8221; (P1227R2), which addresses a controversial topic that has seen some heated debate. The containers in the standard library use unsigned types (typically &lt;code&gt;size_t&lt;/code&gt;) for sizes and indices. It is widely (but not universally) believed that this was a mistake and that signed types should have been used. Using a signed type (e.g., POSIX&amp;#8217;s &lt;code&gt;ssize_t&lt;/code&gt; instead of &lt;code&gt;size_t&lt;/code&gt;) makes detecting overflow more reliable, because sanitizers and assertions can tell when a positive value overflows to a negative one. It&amp;#8217;s more difficult to detect when an unsigned value wraps, because that&amp;#8217;s well-defined by the rules of the language—unsigned types can&amp;#8217;t overflow, they wrap instead. It&amp;#8217;s not always possible to tell when &amp;#8220;a very large value&amp;#8221; is obviously &lt;em&gt;too&lt;/em&gt; large and due to a bug (whereas a negative index into a &lt;code&gt;std::vector&lt;/code&gt; is always wrong).&lt;/p&gt; &lt;p&gt;When the &lt;code&gt;std::span&lt;/code&gt; class template was first added to the C++20 draft, it broke with tradition and used signed types. This caused some consternation, even among those who thought that signed types were a better choice in theory, because consistency with every other type in the library was felt by many to be more important (see &lt;a href="https://wg21.link/P1089R2"&gt;P1089R2&lt;/a&gt; for more information). The compromise approach taken by P1227R2 is to consistently use unsigned types, but add a new &lt;code&gt;ssize()&lt;/code&gt; free function that can be used to get the size of a container as a signed type. This might not be the last we hear of this topic, but we seem to have consensus for now.&lt;/p&gt; &lt;h2&gt;Other papers&lt;/h2&gt; &lt;p&gt;I think those are the most interesting papers processed by LWG. If you&amp;#8217;re interested, the following papers not covered here were also approved for inclusion in C++20:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://wg21.link/P0340R3"&gt;Making std::underlying_type SFINAE-friendly&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P0738R2"&gt;I Stream, You Stream, We All Stream for istream_iterator&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P1164R1"&gt;Make create_directory() Intuitive&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P1001R2"&gt;Vectorization Policies from Parallelism V2 TS&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P1024R3"&gt;Usability Enhancements for std::span&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P0920R2"&gt;Precalculated hash values in lookup&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://wg21.link/P1357R1"&gt;Traits for [Un]bounded Arrays&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;The status of GCC&amp;#8217;s experimental support for the C++20 library is tracked in the &lt;a href="https://gcc.gnu.org/onlinedocs/libstdc++/manual/status.html#status.iso.2020"&gt;libstdc++ documentation&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;I also made a few brief trips outside the LWG room, when there were discussions of papers I was interested in (or had helped author).&lt;/p&gt; &lt;p&gt;In the LEWG Incubator, I took part in yet another discussion of the &lt;a href="https://wg21.link/p0447r4"&gt;&lt;code&gt;colony&lt;/code&gt;&lt;/a&gt; proposal, which I&amp;#8217;ve written about before. It still has some supporters who think it&amp;#8217;s interesting and useful (myself included), but others want more justification. The outcome of the latest review was the desire for more certainty that this fairly novel data structure would fully meet real needs (rather than be &lt;em&gt;almost&lt;/em&gt; what people need, but different enough that they can&amp;#8217;t actually use it). The proposal hasn&amp;#8217;t moved forward, but it&amp;#8217;s definitely not dead either and we&amp;#8217;ll see it again. I also participated in some LEWG Incubator discussions of problems with the Networking TS (which I&amp;#8217;m the project editor for). We had the author of Boost.Asio and the Networking TS present to respond to the issues raised in &lt;a href="https://wg21.link/P1100"&gt;P1100&lt;/a&gt;, &lt;a href="https://wg21.link/P1133"&gt;P1133,&lt;/a&gt; and &lt;a href="https://wg21.link/P1145"&gt;P1145&lt;/a&gt;, which was useful. Alternative solutions to those issues are being worked on.&lt;/p&gt; &lt;p&gt;I also attended a session in the EWG Incubator, for a paper I co-authored proposing a language extension to simplify working with parameter packs in tuples and similar structures. This paper didn&amp;#8217;t proceed but also isn&amp;#8217;t dead yet and will likely return for another round of discussion.&lt;/p&gt; &lt;p&gt;Finally, I attended a LEWG discussion on &lt;a href="https://wg21.link/P1208R1"&gt;&lt;code&gt;source_location&lt;/code&gt;&lt;/a&gt;, and then later in the week the LWG review of that proposal (where it got bogged down in signed/unsigned discussion, which happens a lot recently, see P1227R2 above.)&lt;/p&gt; &lt;p&gt;That&amp;#8217;s all for the Kona report. Later this month, I&amp;#8217;ll be in Cologne for the next meeting. The LWG agenda for Cologne includes an updated &lt;code&gt;flat_map&lt;/code&gt; proposal, as well as a first review of its companion proposal for &lt;code&gt;flat_set&lt;/code&gt;, and an update to the C++20 synchronization proposal discussed above.&lt;/p&gt; &lt;h3&gt;Read more&lt;/h3&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/?p=582757t"&gt;Report from the February 2019 ISO C++ meeting (Core Language working group)&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.redhat.com/blog/?p=581577"&gt;Report from February 2019 ISO WG21 C++ Standards Committee Meeting&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#38;linkname=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F16%2Freport-from-the-february-2019-iso-c-meeting-library%2F&amp;#038;title=Report%20from%20the%20February%202019%20ISO%20C%2B%2B%20meeting%20%28Library%29" data-a2a-url="https://developers.redhat.com/blog/2019/07/16/report-from-the-february-2019-iso-c-meeting-library/" data-a2a-title="Report from the February 2019 ISO C++ meeting (Library)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/16/report-from-the-february-2019-iso-c-meeting-library/"&gt;Report from the February 2019 ISO C++ meeting (Library)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/huDWj-1Xz8E" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Back in February, I attended the WG21 C++ standards committee meeting in rainy Kona, Hawaii (yes, it rained most of the week). This report is so late that we&amp;#8217;re now preparing for the next meeting, which will take place mid-July in Cologne. As usual, I spent the majority of my time in the Library Working [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/16/report-from-the-february-2019-iso-c-meeting-library/"&gt;Report from the February 2019 ISO C++ meeting (Library)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/16/report-from-the-february-2019-iso-c-meeting-library/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">610277</post-id><dc:creator>Jonathan Wakely</dc:creator><dc:date>2019-07-16T07:00:57Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/16/report-from-the-february-2019-iso-c-meeting-library/</feedburner:origLink></entry><entry><title>3 More Pitfalls Everyone Should Avoid with Hybrid Multicloud (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/PwrkGQqz73Q/3-more-pitfalls-everyone-should-avoid-with-hybrid-multicloud-slides.html" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_more_pitfalls_everyone_should_avoid_with_hybrid_multicloud_slides</id><updated>2019-07-16T05:00:02Z</updated><published>2019-07-16T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-QuMUpe_h0wU/XRXgxcOHZGI/AAAAAAAAvKo/JMHBTTS2gCQBEgIFdYiP6udwiFaLpaDHwCLcBGAs/s1600/Screenshot%2B2019-06-28%2Bat%2B11.41.09.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="3 pitfalls " border="0" data-original-height="585" data-original-width="1600" height="117" src="https://1.bp.blogspot.com/-QuMUpe_h0wU/XRXgxcOHZGI/AAAAAAAAvKo/JMHBTTS2gCQBEgIFdYiP6udwiFaLpaDHwCLcBGAs/s320/Screenshot%2B2019-06-28%2Bat%2B11.41.09.png" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;Back by popular demand, the sequel has arrived that's expanding on the &lt;a href="https://youtu.be/eACHhV_uxTE" target="_blank"&gt;original 3 pitfalls everyone should avoid with hybrid multicloud&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;This live online session was delivered on 11 July 2019 and can be &lt;a href="https://redhat.com/en/events/webinar/3-more-pitfalls-everyone-should-avoid-hybrid-multicloud" target="_blank"&gt;watched on demand&lt;/a&gt; if you register for the access.&lt;br /&gt;&lt;br /&gt;If you want to be fully up to date, &lt;a href="https://youtu.be/eACHhV_uxTE" target="_blank"&gt;catch the original session (recorded)&lt;/a&gt; that was delivered at Red Hat Summit 2018. Then jump on over to the all new sequel, 3 More Pitfalls Everyone Should Avoid with Hybrid Multicloud for more great tips and pitfalls.&lt;br /&gt;&lt;br /&gt;Below are the slides and abstract for this session.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;3 More Pitfalls Everyone Should Avoid with Hybrid Multicloud&lt;/h3&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;You’ve heard that the hybrid multicloud is the path to a digitally successful future for your organization. Back by popular demand, this session builds on the original 3 pitfalls everyone should avoid with hybrid multicloud and brings 3 new revelations from real customer experiences.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;In the first session, we shared some hybrid multicloud pitfalls that just scratched the surface. Let’s take a look at a few more pitfalls on the road to hybrid multicloud for your business as you deliver applications, deal with legacy applications, and make important decisions for your cloud strategies. Join us for 3 more lessons learned from real-life transitions into hybrid multicloud environments.&lt;/i&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="420" marginheight="0" marginwidth="0" scrolling="no" src="//www.slideshare.net/slideshow/embed_code/key/nKZi93yR9Lc9VY" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="510"&gt; &lt;/iframe&gt; &lt;/div&gt;&lt;br /&gt;Hope you &lt;a href="https://redhat.com/en/events/webinar/3-more-pitfalls-everyone-should-avoid-hybrid-multicloud" target="_blank"&gt;enjoyed the session and slides&lt;/a&gt;, reach out if you have comments or questions!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ika2ijRazD8:RotkF0llUPQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ika2ijRazD8:RotkF0llUPQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ika2ijRazD8:RotkF0llUPQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=ika2ijRazD8:RotkF0llUPQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=ika2ijRazD8:RotkF0llUPQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/ika2ijRazD8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/PwrkGQqz73Q" height="1" width="1" alt=""/&gt;</content><summary>Back by popular demand, the sequel has arrived that's expanding on the original 3 pitfalls everyone should avoid with hybrid multicloud. This live online session was delivered on 11 July 2019 and can be watched on demand if you register for the access. If you want to be fully up to date, catch the original session (recorded) that was delivered at Red Hat Summit 2018. Then jump on over to the all n...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2019-07-16T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/ika2ijRazD8/3-more-pitfalls-everyone-should-avoid-with-hybrid-multicloud-slides.html</feedburner:origLink></entry><entry><title>Infinispan 10.0.0.Beta4</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3sHJcAJy22o/infinispan-1000beta4.html" /><category term="10.0" scheme="searchisko:content:tags" /><category term="beta" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Tristan Tarrant</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_10_0_0_beta4</id><updated>2019-07-15T10:02:37Z</updated><published>2019-07-15T10:02:00Z</published><content type="html">Dear Infinispan users,&lt;br /&gt;&lt;br /&gt;it has been a while since our last release and quite a few things have been cooking in the Infinispan furnace. Bear in mind that the list below should just serve as a summary and that dedicated blogs, documentation and examples will appear in the near future.&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Server&lt;/h3&gt;Since 5.3, our server has been built on top of WildFly (JBoss AS7 at the time). WildFly gave us a very solid base, including integration with a lot of useful components (security, datasources, management etc) but it also forced us to maintain a large amount of integration code. We have therefore decided to start from a much leaner base to build the new server which, internally we've been calling ServerNG, but which we're now releasing as "Infinispan Server". The old WildFly-based server is still available, but it should be considered "legacy" and will no longer receive any feature enhancements.&lt;br /&gt;&lt;br /&gt;The new server deserves its own dedicated post, but its main features are:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;smaller size (36MB vs 130MB)&lt;/li&gt;&lt;li&gt;smaller memory footprint (20MB heap usage at boot vs 40MB)&lt;/li&gt;&lt;li&gt;single-port: the Hot Rod, REST and management endpoint are now served through a single-port (11222) with automatic protocol detection between HTTP/1.1, HTTP/2 and Hot Rod. The memcached endpoint is handled separately since we don't implement the binary protocol yet.&lt;/li&gt;&lt;li&gt;security implemented using &lt;a href="https://docs.jboss.org/author/display/WFLY/WildFly+Elytron+Security" target="_blank"&gt;WildFly Elytron&lt;/a&gt; currently supporting PLAIN, DIGEST-MD5, SCRAM, EXTERNAL mechs for Hot Rod, BASIC, DIGEST, CLIENT_CERT for REST/HTTP (OAuth/JWT/GS2/GSSAPI/SPNEGO will be coming in the next releases)&lt;/li&gt;&lt;li&gt;the server configuration extends the embedded configuration scheme&lt;/li&gt;&lt;li&gt;caches/counters are created and managed dynamically through Hot Rod / REST.&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;Marshalling&lt;/h3&gt;Infinispan's marshalling has received a significant overhaul and it is now split into three distinct marshallers: Internal, Persistence and User (&lt;a href="https://issues.jboss.org/browse/ISPN-7409" target="_blank"&gt;ISPN-7409&lt;/a&gt; &lt;a href="https://issues.jboss.org/browse/ISPN-9621" target="_blank"&gt;ISPN-9621&lt;/a&gt;)&lt;br /&gt;The Persistence marshaller is now based on ProtoBuf allowing for long-term compatibility of data stored in memory and in cache stores.&lt;br /&gt;The Store Migrator has been updated to allow migration from Infinispan 8.x/9.x cache stores to the new format (&lt;a href="https://issues.jboss.org/browse/ISPN-10276" target="_blank"&gt;ISPN-10276&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Core changes&lt;/h3&gt;Infinispan's internal dependency-injection has been completely rewritten so that factories, components and dependencies are discovered and resolved at compile time instead of using runtime reflection. This, together with the marshalling changes and recent JGroups changes, paves the way for usage and native compilation with &lt;a href="https://quarkus.io/" target="_blank"&gt;Quarkus&lt;/a&gt;.&lt;br /&gt;&lt;h3&gt;REST&lt;/h3&gt;The REST API is continuing its overhaul with the following additions to the v2 API&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Cluster Resource (&lt;a href="https://issues.jboss.org/browse/ISPN-10268" target="_blank"&gt;ISPN-10268&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Cache Resource (&lt;a href="https://issues.jboss.org/browse/ISPN-9772" target="_blank"&gt;ISPN-9772&lt;/a&gt; &lt;a href="https://issues.jboss.org/browse/ISPN-10392" target="_blank"&gt;ISPN-10392&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Counter Resource (&lt;a href="https://issues.jboss.org/browse/ISPN-10151" target="_blank"&gt;ISPN-10151&lt;/a&gt; &lt;a href="https://issues.jboss.org/browse/ISPN-10152" target="_blank"&gt;ISPN-10152&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;The REST endpoint now fully supports authorization (&lt;a href="https://issues.jboss.org/browse/ISPN-8736" target="_blank"&gt;ISPN-8736&lt;/a&gt;)&lt;br /&gt;&lt;h3&gt;Reactive API&lt;/h3&gt;The first implementation of our new Reactive API have been merged. This is still work in progress and the API will receive major changes until the Final release.&lt;br /&gt;The new API includes a new API module and a new KeyValueStore Hot Rod client where search, continuous search and Key Value store methods are included.&lt;br /&gt;&lt;h3&gt;Cross-Site Replication&lt;/h3&gt;Async mode cross-site replication received 2 major improvements:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;async mode is now able to detect disconnections between sites and bring the site offline based on &amp;lt;take-offline&amp;gt; configuration (&lt;a href="https://issues.jboss.org/browse/ISPN-10180" target="_blank"&gt;ISPN-10180&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;track and exposes the average replication times for asynchronous requests (&lt;a href="https://issues.jboss.org/browse/ISPN-9457" target="_blank"&gt;ISPN-9457&lt;/a&gt;) &lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;Non-blocking&lt;/h3&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Non-blocking Hot Rod authentication (&lt;a href="https://issues.jboss.org/browse/ISPN-9841" target="_blank"&gt;ISPN-9841&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Non-blocking REST endpoint (&lt;a href="https://issues.jboss.org/browse/ISPN-10210" target="_blank"&gt;ISPN-10210&lt;/a&gt;) &lt;/li&gt;&lt;li&gt;Update internal remote listener code to support non blocking (&lt;a href="https://issues.jboss.org/browse/ISPN-9716" target="_blank"&gt;ISPN-9716&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Update internal embedded listeners to be non blocking (&lt;a href="https://issues.jboss.org/browse/ISPN-9715" target="_blank"&gt;ISPN-9715&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;&lt;h3&gt;Removal/deprecations&lt;/h3&gt;A new major release is also an opportunity to do some house cleaning.&lt;br /&gt;&lt;h4&gt;Deprecations&lt;/h4&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Deprecate GridFileSystem and org.infinispan.io stream implementations (&lt;a href="https://issues.jboss.org/browse/ISPN-10298" target="_blank"&gt;ISPN-10298&lt;/a&gt;) &lt;/li&gt;&lt;li&gt;Deprecated Total Order transaction mode (&lt;a href="https://issues.jboss.org/browse/ISPN-10259" target="_blank"&gt;ISPN-10259&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;h4&gt;Removals&lt;/h4&gt;&lt;ul&gt;&lt;li&gt;AtomicMap implementations removed (&lt;a href="https://issues.jboss.org/browse/ISPN-10230" target="_blank"&gt;ISPN-10230&lt;/a&gt;) &lt;/li&gt;&lt;li&gt;Remove deprecated org.infinispan.io classes (&lt;a href="https://issues.jboss.org/browse/ISPN-10297" target="_blank"&gt;ISPN-10297&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Remove org.infinispan.tools.ConfigurationConverter (&lt;a href="https://issues.jboss.org/browse/ISPN-10231" target="_blank"&gt;ISPN-10231&lt;/a&gt;)&lt;/li&gt;&lt;li&gt;Remove compatibility mode (&lt;a href="https://issues.jboss.org/browse/ISPN-10370" target="_blank"&gt;ISPN-10370&lt;/a&gt;)&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;If you are curious you can read the &lt;a href="https://issues.jboss.org/secure/ReleaseNote.jspa?projectId=12310799&amp;amp;version=12340951" target="_blank"&gt;detailed release notes&lt;/a&gt; including all fixed issues.&lt;br /&gt;As usual you can ask questions on the &lt;a href="https://developer.jboss.org/en/infinispan/content" target="_blank"&gt;forum&lt;/a&gt;, &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest" target="_blank"&gt;StackOverflow&lt;/a&gt; and interactively on our &lt;a href="http://infinispan.zulipchat.com/" target="_blank"&gt;Zulip Chat&lt;/a&gt;.&lt;br /&gt;Please report any bugs you find on our&lt;a href="https://issues.jboss.org/projects/ISPN/summary" target="_blank"&gt; Issue Tracker.&lt;/a&gt;&lt;br /&gt;Going back to our three-week schedule, our next release will be Beta5, three weeks from now. &lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/HazWAAi59fQ" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3sHJcAJy22o" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan users, it has been a while since our last release and quite a few things have been cooking in the Infinispan furnace. Bear in mind that the list below should just serve as a summary and that dedicated blogs, documentation and examples will appear in the near future. ServerSince 5.3, our server has been built on top of WildFly (JBoss AS7 at the time). WildFly gave us a very solid ba...</summary><dc:creator>Tristan Tarrant</dc:creator><dc:date>2019-07-15T10:02:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/HazWAAi59fQ/infinispan-1000beta4.html</feedburner:origLink></entry><entry><title>Using a custom builder image on Red Hat OpenShift with OpenShift Do</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/WE9qTUa4Y7Y/" /><category term="Containers" /><category term="Go" /><category term="odo" /><category term="OpenShift" /><category term="Red Hat OpenShift" /><author><name>Daniel Helfand</name></author><id>https://developers.redhat.com/blog/?p=609937</id><updated>2019-07-15T07:00:38Z</updated><published>2019-07-15T07:00:38Z</published><content type="html">&lt;p&gt;One of the things I enjoy most about using &lt;a href="https://developers.redhat.com/openshift/"&gt;Red Hat OpenShift&lt;/a&gt; is the Developer Catalog. The Developer Catalog is a central location where a team working with Red Hat OpenShift can encapsulate and share how application components and services are deployed.&lt;/p&gt; &lt;p&gt;The Developer Catalog is often used to define an infrastructure pattern referred to as a &lt;i&gt;builder image&lt;/i&gt;. A builder image is a container image that supports a particular language or framework, following &lt;a href="https://docs.openshift.com/container-platform/4.1/openshift_images/create-images.html"&gt;best practices and Source-to-Image (&lt;i&gt;s2i&lt;/i&gt;) specifications&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The OpenShift Developer Catalog provides several standard builder images supporting applications written in Node.js, Ruby, Python, and more. And while the Developer Catalog has many easy ways to get started deploying several supported languages, the catalog is also flexible in allowing you to add your own builder images to support an infrastructure pattern that is not preloaded in the catalog.&lt;span id="more-609937"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Custom Builder Images&lt;/h2&gt; &lt;p&gt;One language that is currently not preloaded into the catalog is Golang. To add a Golang builder image, an &lt;i&gt;imagestream&lt;/i&gt; can be used to define what container image to use to support a Golang component. An imagestream can be written in YAML or JSON to define properties of the builder image, including where to pull the image definition from and descriptions of the image that will display in the Developer Catalog web console.&lt;/p&gt; &lt;p&gt;I used the imagestream found &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream"&gt;here&lt;/a&gt; to add Golang to a Red Hat OpenShift 4 Developer Catalog. The first property we are interested in defining as part of an imagestream is the &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream-L3"&gt;&lt;i&gt;kind&lt;/i&gt; property&lt;/a&gt;, which is used to specify that an imagestream is being created. We can also define a &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream-L6"&gt;display name&lt;/a&gt; that will be available in the catalog through the web console.&lt;/p&gt; &lt;p&gt;The main &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream-L11"&gt;&lt;i&gt;tags&lt;/i&gt; property&lt;/a&gt; of the imagestream definition can be used to define different versions of a builder image that are supported. Additionally, each version defined within the tags property can have its own tags where it can be specified the image is a builder image by including a &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream-L21"&gt;&lt;i&gt;builder &lt;/i&gt;tag&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Using the &lt;i&gt;from&lt;/i&gt; property, we can specify what image to use and where to pull the image from. In the &lt;a href="https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62#file-centos7-go-1-10-2-imagestream-L44"&gt;Golang example&lt;/a&gt;, the image is pulled from DockerHub and is a Docker image.&lt;/p&gt; &lt;p&gt;The final step in adding the Golang builder image is to log in to your Red Hat OpenShift cluster using &lt;code&gt;oc login&lt;/code&gt; and then run the following:&lt;/p&gt; &lt;pre style="font-family: monospace;"&gt;curl -kL https://gist.github.com/danielhelfand/6b63ba3f250ea596a077904d43abaf62/raw 2&amp;#62; /dev/null | oc apply -n openshift --as system:admin -f -&lt;/pre&gt; &lt;p&gt;With the command above, a Golang option has been added under the OpenShift namespace and will now be available to support Golang applications. Now that this builder image is available in the catalog, how can it quickly be utilized to deploy an application component and test that the image is able to support that component?&lt;/p&gt; &lt;p&gt;Using &lt;a href="https://developers.redhat.com/blog/2019/05/03/announcing-odo-developer-focused-cli-for-red-hat-openshift/"&gt;OpenShift Do (odo)&lt;/a&gt;, the developer-focused CLI for OpenShift, we can easily leverage builder images available in the Developer Catalog. To see what options are available, odo features a command to list builder images (i.e., components) available in the catalog:&lt;/p&gt; &lt;pre style="font-family: monospace;"&gt;$ odo catalog list components NAME PROJECT TAGS dotnet openshift 1.0,1.1,2.1,2.2,latest golang openshift 1.10.2,latest httpd openshift 2.4,latest java openshift 8,latest modern-webapp openshift 10.x,latest nginx openshift 1.10,1.12,1.8,latest nodejs openshift 10,6,8,8-RHOAR,latest perl openshift 5.24,5.26,latest php openshift 7.0,7.1,7.2,latest python openshift 2.7,3.5,3.6,latest ruby openshift 2.3,2.4,2.5,latest&lt;/pre&gt; &lt;p&gt;Using the OpenShift Golang example shown &lt;a href="https://github.com/sclorg/golang-ex"&gt;here&lt;/a&gt;, I can run the following to create a project in my OpenShift cluster, create a Golang component that will use the Golang builder image created via an imagestream, expose the component via a URL, and then deploy the component and have it running on OpenShift:&lt;/p&gt; &lt;pre style="font-family: monospace;"&gt;# Clone the golang example application and go into its root directory $ git clone https://github.com/sclorg/golang-ex $ cd golang-ex # Create the configuration for the golang example application to be # deployed to OpeShift using odo and deploy it to OpenShift $ odo project create goproject $ odo create golang golang-ex --port 8080 $ odo url create golang-ex --port 8080 $ odo push&lt;/pre&gt; &lt;p&gt;When the deployment is complete, the Golang component can be accessed via the URL created by odo. Clicking on the URL should show the following greeting:&lt;/p&gt; &lt;blockquote&gt;&lt;p&gt;&amp;#62;Hello OpenShift!&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;Imagestreams make it easier to promote reuse of infrastructure patterns so development teams can focus on creating applications rather than how they are hosted. odo further extends their capabilities by providing a CLI that makes it simple to pick and choose what infrastructure to utilize when developing applications on OpenShift.&lt;/p&gt; &lt;p&gt;More information on imagestreams can be found in the &lt;a href="https://docs.openshift.com/container-platform/4.1/openshift_images/images-understand.html#images-imagestream-use_images-understand"&gt;Red Hat OpenShift documentation&lt;/a&gt;. Official Red Hat and community-supported imagestreams can be found on the &lt;a href="https://github.com/openshift/library/tree/master/community"&gt;openshift/library&lt;/a&gt; GitHub repository as well as under the &lt;a href="https://github.com/sclorg"&gt;Software Collections&lt;/a&gt; GitHub organization.&lt;/p&gt; &lt;p&gt;For information on odo, you can visit the &lt;a href="https://openshiftdo.org/"&gt;OpenShift Do&lt;/a&gt; website and also check out the project&amp;#8217;s &lt;a href="https://github.com/openshift/odo"&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;em&gt;To see a video version of this tutorial, &lt;a href="https://blog.openshift.com/from-red-hat-developers-blog-using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/"&gt;visit the OpenShift blog&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#38;linkname=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F15%2Fusing-a-custom-builder-image-on-red-hat-openshift-with-openshift-do%2F&amp;#038;title=Using%20a%20custom%20builder%20image%20on%20Red%20Hat%20OpenShift%20with%20OpenShift%20Do" data-a2a-url="https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/" data-a2a-title="Using a custom builder image on Red Hat OpenShift with OpenShift Do"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/"&gt;Using a custom builder image on Red Hat OpenShift with OpenShift Do&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/WE9qTUa4Y7Y" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;One of the things I enjoy most about using Red Hat OpenShift is the Developer Catalog. The Developer Catalog is a central location where a team working with Red Hat OpenShift can encapsulate and share how application components and services are deployed. The Developer Catalog is often used to define an infrastructure pattern referred to [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/"&gt;Using a custom builder image on Red Hat OpenShift with OpenShift Do&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">609937</post-id><dc:creator>Daniel Helfand</dc:creator><dc:date>2019-07-15T07:00:38Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/15/using-a-custom-builder-image-on-red-hat-openshift-with-openshift-do/</feedburner:origLink></entry><entry><title>Infinispan Operator 0.3.0 expands container and security configuration!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NzF3_JaXngw/infinispan-operator-030-expands.html" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Galder Zamarreño</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_operator_0_3_0_expands_container_and_security_configuration</id><updated>2019-07-12T11:30:34Z</updated><published>2019-07-12T09:58:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Infinispan Operator 0.3.0 is now available with expanded configuration and security options:&lt;br /&gt;&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Container Configuration&lt;/h2&gt;&lt;br /&gt;With this release of the Infinispan Operator, you can configure explicit CPU and memory limits for individual containers. The defaults are&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;0.5&lt;/span&gt;&amp;nbsp;CPUs and&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;512Mi&lt;/span&gt;&amp;nbsp;of memory.&lt;br /&gt;&lt;br /&gt;The Operator also lets you pass extra JVM options, which is useful for tracking native memory consumption or extra GC logging parameters.&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/142723eb8a9cf9234741be363870667b.js"&gt;&lt;/script&gt; &lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Security Configuration&lt;/h2&gt;&lt;br /&gt;Starting with 0.3.0, credentials are automatically generated for data connector and management users when you instantiate the Infinispan Operator.&lt;br /&gt;&lt;br /&gt;The default usernames are&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;developer&lt;/span&gt;&amp;nbsp;and&amp;nbsp;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;admin&lt;/span&gt;&amp;nbsp;for the data connector user and management user, respectively.&lt;br /&gt;&lt;br /&gt;Generated passwords are stored in Kubernetes &lt;a href="https://kubernetes.io/docs/concepts/configuration/secret/"&gt;Secret&lt;/a&gt;&amp;nbsp;instances. You can extract the passwords as follows:&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/17aec6114933f568ea331d3ec680b041.js"&gt;&lt;/script&gt; For convenience, the default usernames are also stored in the secret. Using the&amp;nbsp;&lt;a href="https://stedolan.github.io/jq/"&gt;jq&lt;/a&gt; command line tool, you can inspect both the username and password values with a single command:&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/a3c4fcb78d31019e178b981828dc4d0f.js"&gt;&lt;/script&gt; If you want to set custom credentials for the data connector and management users, create Kubernetes Secret instances as follows:&lt;br /&gt;&lt;br /&gt;&lt;script src="https://gist.github.com/galderz/6983e0c68b806cf9a969e12beffe8e0d.js"&gt;&lt;/script&gt; When using a &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;Credentials&lt;/span&gt; type authentication, the referenced secrets must contain &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;username&lt;/span&gt; and &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;password&lt;/span&gt; fields.&lt;br /&gt;&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Trying It Out!&lt;/h2&gt;&lt;br /&gt;The easiest way to get started with the Infinispan Operator is via the &lt;a href="https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator"&gt;simple tutorial&lt;/a&gt;. The Operator is compatible with vanilla Kubernetes environments, such as Minikube, as well as Red Hat OpenShift.&lt;br /&gt;&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;Available via Operator Hub&lt;/h2&gt;&lt;br /&gt;Install the Infinispan Operator directly from the Operator Hub, which is available out of the box on all OpenShift 4 versions. If you're using a vanilla Kubernertes environment, you might need to install the Operator Lifecycle Manager before you can install via the Operator Hub.&lt;br /&gt;&lt;br /&gt;The Infinispan Operator is also included in the community for Kubernetes Operators is available from&amp;nbsp;&lt;a href="https://operatorhub.io/operator/infinispan"&gt;operatorhub.io&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;h2 style="text-align: left;"&gt;What's Next?&lt;/h2&gt;&lt;br /&gt;The Operator configuration does not yet provide all capabilities available for Infinispan servers. We're working through a process of configuration specification that distills the server configuration into a simple, easy to use, set of configuration options. The current proposal is being discussed openly &lt;a href="https://github.com/infinispan/infinispan-operator/pull/77"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Infinispan 10 brings a brand new server that's no longer based on WildFly. The Operator 0.x series will remain focused on Infinispan 9.x server, with Operator 1.x series focusing on Infinispan 10 and onwards.&lt;br /&gt;&lt;br /&gt;Cheers,&lt;br /&gt;Galder&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/jinKhfbWWEU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NzF3_JaXngw" height="1" width="1" alt=""/&gt;</content><summary>Infinispan Operator 0.3.0 is now available with expanded configuration and security options: Container Configuration With this release of the Infinispan Operator, you can configure explicit CPU and memory limits for individual containers. The defaults are 0.5 CPUs and 512Mi of memory. The Operator also lets you pass extra JVM options, which is useful for tracking native memory consumption or extra...</summary><dc:creator>Galder Zamarreño</dc:creator><dc:date>2019-07-12T09:58:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/jinKhfbWWEU/infinispan-operator-030-expands.html</feedburner:origLink></entry><entry><title>Get started with Red Hat CodeReady Studio 12.12.0.GA and JBoss Tools 4.12.0.Final for Eclipse 2019-06</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/L1ZHumPJNUw/" /><category term="CodeReady portfolio" /><category term="Developer Tools" /><category term="Java" /><category term="Modern App Dev" /><category term="OpenShift" /><category term="Red Hat JBoss Enterprise Application Platform" /><category term="Red Hat OpenShift Container Platform" /><category term="Red Hat Container Development Kit" /><category term="Red Hat Enterprise Application Platform" /><category term="Red Hat OpenShift" /><author><name>Jeff Maury</name></author><id>https://developers.redhat.com/blog/?p=608207</id><updated>2019-07-12T07:00:00Z</updated><published>2019-07-12T07:00:00Z</published><content type="html">&lt;p&gt;&lt;a href="http://tools.jboss.org/documentation/whatsnew/jbosstools/4.12.0.Final.html"&gt;JBoss Tools 4.12.0&lt;/a&gt; and &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio 12.12 &lt;/a&gt;for Eclipse 2019-06 are here and are waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started.&lt;span id="more-608207"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="installation"&gt;Installation&lt;/h2&gt; &lt;p&gt;Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. Simply download it from our &lt;a href="https://developers.redhat.com/products/codeready-studio/overview"&gt;Red Hat CodeReady Studio product page&lt;/a&gt; and run it like this:&lt;/p&gt; &lt;pre&gt;java -jar codereadystudio-&amp;#60;installername&amp;#62;.jar&lt;/pre&gt; &lt;div class="paragraph"&gt; &lt;p&gt;JBoss Tools or Bring-Your-Own-Eclipse (BYOE) CodeReady Studio requires a bit more.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release requires at least Eclipse 4.12 (2019-06), but we recommend using the latest &lt;a href="http://www.eclipse.org/downloads/packages/release/2019-06/r/eclipse-ide-java-ee-developers"&gt;Eclipse 4.12 2019-06 JEE Bundle&lt;/a&gt; because then you get most of the dependencies pre-installed.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Once you have installed Eclipse, you can either find us on the Eclipse Marketplace under &amp;#8220;JBoss Tools&amp;#8221; or &amp;#8220;Red Hat CodeReady Studio.&amp;#8221;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For JBoss Tools, you can also use our update site directly:&lt;/p&gt; &lt;pre&gt;http://download.jboss.org/jbosstools/photon/stable/updates/&lt;/pre&gt; &lt;h2 id="what-is-new"&gt;What&amp;#8217;s new?&lt;/h2&gt; &lt;p&gt;Our main focus for this release was improvements for container-based development and bug fixing. Eclipse 2019-06 itself has a lot of new cool stuff, but I&amp;#8217;ll highlight just a few updates in both Eclipse 2019-06 and JBoss Tools plugins that I think are worth mentioning.&lt;/p&gt; &lt;h3 id="openshift"&gt;Red Hat OpenShift&lt;/h3&gt; &lt;h4 id="openshift-container-platform-4-support"&gt;Red Hat OpenShift Container Platform 4 support&lt;/h4&gt; &lt;p&gt;The new &lt;a href="https://developers.redhat.com/products/openshift/overview"&gt;OpenShift Container Platform (OCP)&lt;/a&gt; 4 is now available (see this &lt;a href="https://www.redhat.com/en/about/press-releases/red-hat-redefines-enterprise-kubernetes-through-full-stack-automation-red-hat-openshift-4?source=pressreleaselisting" target="_blank" rel="noopener noreferrer"&gt;article&lt;/a&gt;) and is a major shift compared to OCP 3, but JBoss Tools is compatible with this major release in a transparent way. Just define your connection to your OCP 4 based cluster as you did for an OCP 3 cluster and use the tooling!&lt;/p&gt; &lt;h3 id="server-tools"&gt;Server tools&lt;/h3&gt; &lt;h4 id="wildfly-17-server-adapter"&gt;Wildfly 17 server adapter&lt;/h4&gt; &lt;p&gt;A server adapter has been added to work with Wildfly 17. It adds support for Java EE 8.&lt;/p&gt; &lt;h3 id="hibernate-tools"&gt;Hibernate Tools&lt;/h3&gt; &lt;h4 id="new-runtime-provider"&gt;New runtime provider&lt;/h4&gt; &lt;p&gt;The new Hibernate 5.4 runtime provider has been added. It incorporates Hibernate Core version 5.4.3.Final and Hibernate Tools version 5.4.3.Final&lt;/p&gt; &lt;h4 id="runtime-provider-updates"&gt;Runtime provider updates&lt;/h4&gt; &lt;p&gt;The Hibernate 5.3 runtime provider now incorporates Hibernate Core version 5.3.10.Final and Hibernate Tools version 5.3.10.Final.&lt;/p&gt; &lt;h3 id="maven"&gt;Maven&lt;/h3&gt; &lt;h4 id="maven-support-updated-to-m2e-1-12"&gt;Maven support updated to M2E 1.12&lt;/h4&gt; &lt;p&gt;The Maven support is based on Eclipse M2E 1.12.&lt;/p&gt; &lt;h3 id="platform"&gt;Platform&lt;/h3&gt; &lt;h4 id="views-dialogs-and-toolbar"&gt;Views, dialogs, and toolbar&lt;/h4&gt; &lt;h5 id="import-project-by-passing-it-as-command-line-argument"&gt;Import project by passing it as a command-line argument&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can import a project into Eclipse by passing its path as a parameter to the launcher. The command would look like &lt;code&gt;eclipse /path/to/project&lt;/code&gt; on Linux and Windows, or &lt;code&gt;open Eclipse.app -a /path/to/project&lt;/code&gt; on macOS.&lt;/p&gt; &lt;p id="xktNyXk"&gt;&lt;img class=" size-full wp-image-608237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7297135e.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7297135e.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7297135e.png 732w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7297135e-300x151.png 300w" sizes="(max-width: 732px) 100vw, 732px" /&gt;&lt;/p&gt; &lt;h5 id="launch-run-and-debug-configurations-from-quick-access"&gt;Launch Run and Debug configurations from Quick Access&lt;/h5&gt; &lt;p&gt;From the &lt;em&gt;Quick Access&lt;/em&gt; proposals (accessible with &lt;code&gt;Ctrl+3&lt;/code&gt; shortcut), you can now directly launch any of the Run or Debug configurations available in your workspace.&lt;/p&gt; &lt;p id="WqDtFPs"&gt;&lt;img class=" size-full wp-image-608247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7737acd5.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7737acd5.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7737acd5.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7737acd5-300x137.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For performance reasons, the extra &lt;em&gt;Quick Access&lt;/em&gt; entries are only visible if the &lt;code&gt;org.eclipse.debug.ui&lt;/code&gt; bundle was already activated by some previous action in the workbench such as editing a launch configuration, or expanding the &lt;em&gt;Run As…​&lt;/em&gt; menus.&lt;/p&gt; &lt;p&gt;The icon used for the view menu has been improved. It is now crisp on high-resolution displays and also looks much better in the dark theme. Compare the old version at the top and the new version at the bottom:&lt;/p&gt; &lt;p id="bMOwBBw"&gt;&lt;img class=" size-full wp-image-608257 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7ec06318.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7ec06318.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7ec06318.png 402w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d7ec06318-300x98.png 300w" sizes="(max-width: 402px) 100vw, 402px" /&gt;&lt;/p&gt; &lt;h5 id="high-resolution-images-drawn-on-mac"&gt;High-resolution images drawn on Mac&lt;/h5&gt; &lt;p&gt;On Mac, images and text are now drawn in high resolution during GC operations. You can see crisp images on high-res displays in the editor rulers, forms, etc. in Eclipse. Compare the old version at the top and the new version at the bottom:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p id="fywlIlQ"&gt;&lt;img class=" size-full wp-image-608267 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d820a61e0.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d820a61e0.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d820a61e0.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d820a61e0-300x218.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/p&gt; &lt;p id="VtrXAEm"&gt;&lt;img class=" size-full wp-image-608277 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d83b9afcb.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d83b9afcb.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d83b9afcb.png 500w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d83b9afcb-300x218.png 300w" sizes="(max-width: 500px) 100vw, 500px" /&gt;&lt;/p&gt; &lt;h5 id="table-tree-background-lines-shown-in-dark-theme-on-mac"&gt;Table/Tree background lines shown in dark theme on Mac&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In dark theme on Mac, the Table and Trees in Eclipse now show the alternating dark lines in the background when &lt;code&gt;setLinesVisible(true)&lt;/code&gt; is set. Earlier, they had a gray background even if line visibility was true.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Example of a Tree and Table in Eclipse with alternating dark lines in the background:&lt;/p&gt; &lt;p id="TtOekPx"&gt;&lt;img class=" size-full wp-image-608287 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d86c06579.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d86c06579.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d86c06579.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d86c06579-300x100.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;div class="sect3"&gt; &lt;h4 id="equinox"&gt;Equinox&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When the Equinox OSGi Framework is launched, the installed bundles are activated according to their configured start-level. The bundles with lower start-levels are activated first. Bundles within the same start-level are activated sequentially from a single thread.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;A new configuration option &lt;code&gt;equinox.start.level.thread.count&lt;/code&gt; has been added that enables the framework to start bundles within the same start-level in parallel. The default value is &lt;code&gt;1&lt;/code&gt;, which keeps the previous behavior of activating bundles from a single thread. Setting the value to &lt;code&gt;0&lt;/code&gt; enables parallel activation using a thread count equal to &lt;code&gt;Runtime.getRuntime().availableProcessors()&lt;/code&gt;. Setting the value to a number greater than &lt;code&gt;1&lt;/code&gt; will use the specified number as the thread count for parallel bundle activation.&lt;/p&gt; &lt;p&gt;The default is &lt;code&gt;1&lt;/code&gt; because of the risk of possible deadlock when activating bundles in parallel. Extensive testing must be done on the set of bundle installed in the framework before considering enabling this option in a product.&lt;/p&gt; &lt;h3 id="java-developement-tools-jdt"&gt;Java Development Tools (JDT)&lt;/h3&gt; &lt;h4 id="java-12-support"&gt;Java 12 support&lt;/h4&gt; &lt;h5 id="change-project-compliance-and-jre-to-12"&gt;Change project compliance and JRE to 12&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Change project compliance and JRE to 12&lt;/em&gt; is provided to change the current project to be compatible with Java 12.&lt;/p&gt; &lt;p id="dmKMwPJ"&gt;&lt;img class=" size-full wp-image-608297 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d8e761882.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d8e761882.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d8e761882.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d8e761882-300x64.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="enable-preview-features"&gt;Enable preview features&lt;/h5&gt; &lt;p&gt;Preview features in Java 12 can be enabled using &lt;em&gt;Preferences &amp;#62; Java &amp;#62; Compiler &amp;#62; Enable preview features&lt;/em&gt; option. The problem severity of these preview features can be configured using the &lt;em&gt;Preview features with severity level&lt;/em&gt; option.&lt;/p&gt; &lt;p id="ysohXjT"&gt;&lt;img class=" size-full wp-image-608307 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d90b5903f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d90b5903f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d90b5903f.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d90b5903f-300x120.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="set-enable-preview-features"&gt;Set Enable preview features&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Configure problem severity&lt;/em&gt; is provided to update the problem severity of preview features in Java 12.&lt;/p&gt; &lt;p id="ywRjWkA"&gt;&lt;img class=" size-full wp-image-608317 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9341bef0.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9341bef0.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9341bef0.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9341bef0-300x62.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="add-default-case-to-switch-statement"&gt;Add default case to switch statement&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Add &amp;#8216;default&amp;#8217; case &lt;/em&gt;is provided to add default case to an enhanced switch statement in Java 12.&lt;/p&gt; &lt;p id="rKJzxDt"&gt;&lt;img class=" size-full wp-image-608327 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d95d60299.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d95d60299.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d95d60299.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d95d60299-300x86.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="add-missing-case-statements-to-switch-statement"&gt;Add missing case statements to switch statement&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Add missing case statements&lt;/em&gt; is provided for an enhanced switch statement in Java 12.&lt;/p&gt; &lt;p id="rJQxBbI"&gt;&lt;img class=" size-full wp-image-608347 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9895f735.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9895f735.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9895f735.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9895f735-300x85.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="add-default-case-to-switch-expression"&gt;Add default case to switch expression&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Add &amp;#8216;default&amp;#8217; case&lt;/em&gt; is provided to add default case to a switch expression.&lt;/p&gt; &lt;p id="ZfMgyPJ"&gt;&lt;img class=" size-full wp-image-608357 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ae8b444.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ae8b444.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ae8b444.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ae8b444-300x66.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="add-missing-case-statements-to-switch-expression"&gt;Add missing case statements to switch expression&lt;/h5&gt; &lt;p&gt;A quick fix &lt;em&gt;Add missing case statements&lt;/em&gt; is provided for switch expressions.&lt;/p&gt; &lt;p id="nWhMtWX"&gt;&lt;img class=" size-full wp-image-608367 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ea5db7c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ea5db7c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ea5db7c.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18d9ea5db7c-300x75.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;div class="sect4"&gt; &lt;h5 id="format-whitespaces-in-switch"&gt;Format whitespaces in &amp;#8216;switch&amp;#8217;&lt;/h5&gt; &lt;p&gt;As Java 12 introduced some new features into the &lt;code&gt;switch&lt;/code&gt; construct, the formatter profile has some new settings for it. The settings allow you to control spaces around the arrow operator (separately for &lt;code&gt;case&lt;/code&gt; and &lt;code&gt;default&lt;/code&gt;) and around commas in a multi-value case.&lt;/p&gt; &lt;p&gt;The settings can be found in the &lt;em&gt;Profile Editor (Preferences &amp;#62; Java &amp;#62; Code Style &amp;#62; Formatter &amp;#62; Edit…​)&lt;/em&gt; under the &lt;em&gt;White space &amp;#62; Control statements &amp;#62; &amp;#8216;switch&amp;#8217;&lt;/em&gt; subsection.&lt;/p&gt; &lt;p id="cAxhwII"&gt;&lt;img class=" size-full wp-image-608377 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da24eb018.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da24eb018.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da24eb018.png 399w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da24eb018-293x300.png 293w" sizes="(max-width: 399px) 100vw, 399px" /&gt;&lt;/p&gt; &lt;h5 id="split-switch-case-labels"&gt;Split switch case labels&lt;/h5&gt; &lt;p&gt;As Java 12 introduced the ability to group multiple &lt;code&gt;switch&lt;/code&gt; case labels into a single case expression, a quick assist is provided that allows these grouped labels to be split into separate case statements.&lt;/p&gt; &lt;p id="GtCPUKe"&gt;&lt;img class=" size-full wp-image-608387 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da544de15.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da544de15.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da544de15.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da544de15-300x171.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h4 id="java-editor"&gt;Java Editor&lt;/h4&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In the &lt;em&gt;Java &amp;#62; Editor &amp;#62; Code Mining&lt;/em&gt; preferences, you can now enable the &lt;em&gt;Show parameter names &lt;/em&gt;option. This will show the parameter names as code minings in method or constructor calls, for cases where the resolution may not be obvious for a human reader.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For example, the code mining will be shown if the argument name in the method call is not an exact match of the parameter name or if the argument name doesn’t contain the parameter name as a substring.&lt;/p&gt; &lt;p id="HOxCQLJ"&gt;&lt;img class=" size-full wp-image-608397 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da84b8795.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da84b8795.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da84b8795.png 665w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18da84b8795-300x104.png 300w" sizes="(max-width: 665px) 100vw, 665px" /&gt;&lt;/p&gt; &lt;h5 id="show-number-of-implementations-of-methods-as-code-minings"&gt;Show number of implementations of methods as code minings&lt;/h5&gt; &lt;p&gt;In the &lt;em&gt;Java &amp;#62; Editor &amp;#62; Code Mining&lt;/em&gt; preferences, selecting &lt;em&gt;Show implementations with the Show References (including implementations) for → Methods&lt;/em&gt; option now shows implementations of methods.&lt;/p&gt; &lt;p id="eJLEFdd"&gt;&lt;img class=" size-full wp-image-608407 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dab389110.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dab389110.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dab389110.png 454w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dab389110-300x88.png 300w" sizes="(max-width: 454px) 100vw, 454px" /&gt;&lt;/p&gt; &lt;p&gt;Clicking on method implementations brings up the &lt;em&gt;Search&lt;/em&gt; view that shows all implementations of the method in sub-types.&lt;/p&gt; &lt;p id="QWjqqsO"&gt;&lt;img class=" size-full wp-image-608417 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dad71eebf.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dad71eebf.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dad71eebf.png 456w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dad71eebf-281x300.png 281w" sizes="(max-width: 456px) 100vw, 456px" /&gt;&lt;/p&gt; &lt;h5 id="open-single-implementation-reference-in-editor-from-code-mining"&gt;Open single implementation/reference in editor from code mining&lt;/h5&gt; &lt;p&gt;When the &lt;em&gt;Java &amp;#62; Editor &amp;#62; Code Mining&lt;/em&gt; preferences are enabled and a single implementation or reference is shown, moving the cursor over the annotation and using Ctrl+Click will open the editor and display the single implementation or reference.&lt;/p&gt; &lt;p id="HYigULJ"&gt;&lt;img class=" size-full wp-image-608427 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db029bf0f.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db029bf0f.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db029bf0f.png 487w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db029bf0f-292x300.png 292w" sizes="(max-width: 487px) 100vw, 487px" /&gt;&lt;/p&gt; &lt;h5 id="additional-quick-fixes-for-service-provider-constructors"&gt;Additional quick fixes for service provider constructors&lt;/h5&gt; &lt;p&gt;Appropriate quick fixes are offered when a service defined in a &lt;code&gt;module-info.java&lt;/code&gt; file has a service provider implementation whose no-arg constructor is not visible or is non-existent.&lt;/p&gt; &lt;p id="UcTuFuN"&gt;&lt;img class=" size-full wp-image-608437 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db395987d.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db395987d.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db395987d.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db395987d-300x136.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="template-to-create-switch-labeled-statement-and-switch-expressions"&gt;Template to create Switch Labeled Statement and Switch Expressions&lt;/h5&gt; &lt;p&gt;The Java Editor now offers new templates for the creation of switch labeled statements and switch expressions. On a switch statement, three new templates: &lt;em&gt;switch labeled statement, switch case expression, &lt;/em&gt;and &lt;em&gt;switch labeled expression &lt;/em&gt;are available as shown below. These new templates are available on Java projects having compliance level of Java 12 or above.&lt;/p&gt; &lt;p id="qQFURpK"&gt;&lt;img class=" size-full wp-image-608447 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db636ca6c.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db636ca6c.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db636ca6c.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db636ca6c-300x133.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;p id="BjdBHIa"&gt;&lt;img class=" size-full wp-image-608457 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db7bd2d0a.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db7bd2d0a.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db7bd2d0a.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db7bd2d0a-300x136.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;p id="LiuLkPF"&gt;&lt;img class=" size-full wp-image-608467 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db8c72a43.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db8c72a43.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db8c72a43.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18db8c72a43-300x132.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;p&gt;If &lt;em&gt;switch &lt;/em&gt;is being used as an expression, then only &lt;em&gt;switch case expression&lt;/em&gt; and &lt;em&gt;switch labeled expression &lt;/em&gt;templates are available as shown below:&lt;/p&gt; &lt;p id="lVkCMbm"&gt;&lt;img class=" size-full wp-image-608477 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbad03620.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbad03620.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbad03620.png 328w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbad03620-300x59.png 300w" sizes="(max-width: 328px) 100vw, 328px" /&gt;&lt;/p&gt; &lt;h4 id="java-views-and-dialogs"&gt;Java views and dialogs&lt;/h4&gt; &lt;h5 id="enable-comment-generation-in-modules-and-packages"&gt;Enable comment generation in modules and packages&lt;/h5&gt; &lt;p&gt;An option is now available to enable/disable the comment generation while creating &lt;code&gt;module-info.java&lt;/code&gt; or &lt;code&gt;package-info.java&lt;/code&gt;.&lt;/p&gt; &lt;p id="mFdtMNa"&gt;&lt;img class=" size-full wp-image-608487 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbddd2941.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbddd2941.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbddd2941.png 467w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbddd2941-300x199.png 300w" sizes="(max-width: 467px) 100vw, 467px" /&gt;&lt;/p&gt; &lt;p id="NKqJFhM"&gt;&lt;img class=" size-full wp-image-608497 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbf302c44.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbf302c44.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbf302c44.png 488w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dbf302c44-300x241.png 300w" sizes="(max-width: 488px) 100vw, 488px" /&gt;&lt;/p&gt; &lt;h5 id="improved-create-getter-and-setter-quick-assist"&gt;Improved &amp;#8220;create getter and setter&amp;#8221; quick assist&lt;/h5&gt; &lt;p&gt;The quick assist for creating getter and setter methods from fields no longer forces you to create both.&lt;/p&gt; &lt;p id="GOZUthl"&gt;&lt;img class=" size-full wp-image-608507 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc1bcac83.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc1bcac83.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc1bcac83.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc1bcac83-300x225.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;h5 id="quick-fix-to-open-all-required-closed-projects"&gt;Quick fix to open all required closed projects&lt;/h5&gt; &lt;p&gt;A quick fix to open all required closed projects is now available in the &lt;em&gt;Problems&lt;/em&gt; view.&lt;/p&gt; &lt;p id="qwxRjoP"&gt;&lt;img class=" size-full wp-image-608517 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc48e2be7.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc48e2be7.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc48e2be7.png 452w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc48e2be7-300x98.png 300w" sizes="(max-width: 452px) 100vw, 452px" /&gt;&lt;/p&gt; &lt;p id="UlmINvG"&gt;&lt;img class=" size-full wp-image-608527 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc5a44062.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc5a44062.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc5a44062.png 341w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc5a44062-198x300.png 198w" sizes="(max-width: 341px) 100vw, 341px" /&gt;&lt;/p&gt; &lt;div class="sect4"&gt; &lt;h5 id="new-ui-for-configuring-module-dependencies"&gt;New UI for configuring Module Dependencies&lt;/h5&gt; &lt;p&gt;The Java Build Path configuration now has a new tab, &lt;em&gt;Module Dependencies,&lt;/em&gt; which will gradually replace the options previously hidden behind the &lt;em&gt;Is Modular&lt;/em&gt; node on other tabs of this dialog. The new tab provides an intuitive way for configuring all those module-related options, for which Java 9 had introduced new command-line options, such as &lt;code&gt;--limit-modules&lt;/code&gt;, etc.&lt;/p&gt; &lt;p id="uICqXDK"&gt;&lt;img class=" size-full wp-image-608537 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc85bbce4.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc85bbce4.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc85bbce4.png 520w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dc85bbce4-300x261.png 300w" sizes="(max-width: 520px) 100vw, 520px" /&gt;&lt;/p&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The dialog focuses on how to build one Java Project, here &lt;em&gt;org.greetings&lt;/em&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Below this focus module, the left-hand pane shows all modules that participate in the build, where decorations A and S mark automatic modules and system modules, respectively. The extent of system modules (from JRE) can be modified with the &lt;em&gt;Add System Module…&lt;/em&gt;&lt;strong&gt;​&lt;/strong&gt; and &lt;em&gt;Remove &lt;/em&gt;buttons (corresponds to &lt;code&gt;--add-modules&lt;/code&gt; and &lt;code&gt;--limit-modules&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When a module is selected in the left-hand pane, the right-hand pane allows to configure the following properties for this module:&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Read module:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select additional modules that should be accessible from the selected module (corresponds to &lt;code&gt;--add-reads&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Expose package:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Select additional packages to be exposed (&amp;#8220;exports&amp;#8221; or &amp;#8220;opens&amp;#8221;) from the selected module (corresponds to &lt;code&gt;--add-exports&lt;/code&gt; or &lt;code&gt;--add-opens&lt;/code&gt;).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;&lt;strong&gt;Patch with:&lt;/strong&gt;&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Add more packages and classes to the selected module (corresponds to &lt;code&gt;--patch-module&lt;/code&gt;).&lt;/p&gt; &lt;h4 id="java-compiler"&gt;Java Compiler&lt;/h4&gt; &lt;h5 id="experimental-java-index-retired"&gt;Experimental Java index retired&lt;/h5&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Eclipse 4.7 introduced a new experimental Java index which was disabled by default.&lt;/p&gt; &lt;p&gt;Due to lack of resources to properly support all Java 9+ language changes, this index is no longer available, starting with Eclipse 4.12.&lt;/p&gt; &lt;p&gt;The preference to enable it in &lt;em&gt;Preferences &amp;#62; Java&lt;/em&gt; is removed and the old index will be always used.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;em&gt;Preferences &amp;#62; Java &amp;#62; Rebuild Index&lt;/em&gt; button can be used to delete the existing index files and free disk space.&lt;/p&gt; &lt;h4 id="debug"&gt;Debug&lt;/h4&gt; &lt;h5 id="run-to-line-on-ctrl-alt-click-in-annotation-ruler"&gt;&amp;#8216;Run to Line&amp;#8217; on Ctrl+Alt+Click in annotation ruler&lt;/h5&gt; &lt;p&gt;A new shortcut, Ctrl+Alt+Click, has been added to the annotation ruler that will invoke the &lt;em&gt;&amp;#8216;Run to Line&amp;#8217;&lt;/em&gt; command and take the program execution to the line of invocation.&lt;/p&gt; &lt;p id="vVYKycj"&gt;&lt;img class=" size-full wp-image-608547 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd4677cde.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd4677cde.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd4677cde.png 336w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd4677cde-300x204.png 300w" sizes="(max-width: 336px) 100vw, 336px" /&gt;&lt;/p&gt; &lt;h5 id="content-assist-in-debug-shell"&gt;Content assist in Debug Shell&lt;/h5&gt; &lt;p&gt;Content assist (Ctrl+Space) support is now available in the &lt;em&gt;Debug Shell&lt;/em&gt;.&lt;/p&gt; &lt;p id="kDDKler"&gt;&lt;img class=" size-full wp-image-608557 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd7050a57.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd7050a57.png" alt="" /&gt;&lt;/p&gt; &lt;h5 id="clear-java-stack-trace-console-usage-hint-on-first-edit"&gt;Clear Java Stack Trace Console usage hint on first edit&lt;/h5&gt; &lt;p&gt;The Java Stack Trace Console shows a usage hint when opened the first time. This message is now automatically removed when the user starts typing or pasting a stack trace.&lt;/p&gt; &lt;p id="uocgxIA"&gt;&lt;img class=" size-full wp-image-608567 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd9b40a38.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd9b40a38.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd9b40a38.png 472w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18dd9b40a38-300x93.png 300w" sizes="(max-width: 472px) 100vw, 472px" /&gt;&lt;/p&gt; &lt;h5 id="lambda-variable-names-shown-in-variables-view"&gt;Lambda variable names shown in Variables view&lt;/h5&gt; &lt;p&gt;The Lambda variable names are now shown in the &lt;em&gt;Variables&lt;/em&gt; view while debugging projects in the workspace.&lt;/p&gt; &lt;p id="rTEBhve"&gt;&lt;img class=" size-full wp-image-608577 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18ddffd00f9.png" src="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18ddffd00f9.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18ddffd00f9.png 507w, https://developers.redhat.com/blog/wp-content/uploads/2019/06/img_5d18ddffd00f9-300x137.png 300w" sizes="(max-width: 507px) 100vw, 507px" /&gt;&lt;/p&gt; &lt;h4 id="jdt-developers"&gt;JDT developers&lt;/h4&gt; &lt;h5 id="support-for-new-javadoc-tags"&gt;Support for new Javadoc tags&lt;/h5&gt; &lt;p&gt;The following Javadoc tags are now supported by the compiler and auto-complete.&lt;/p&gt; &lt;p&gt;Tags introduced in JDK 8:&lt;/p&gt; &lt;p&gt;&lt;code&gt;@apiNote&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;@implSpec&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;@implNote&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Tags introduced in JDK 9:&lt;/p&gt; &lt;p&gt;&lt;code&gt;@index&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;@hidden&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;@provides&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;@uses&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Tags introduced in JDK 10:&lt;/p&gt; &lt;p&gt;&lt;code&gt;@summary&lt;/code&gt;&lt;/p&gt; &lt;h3 id="and-more"&gt;And more…​&lt;/h3&gt; &lt;p&gt;You can find more noteworthy updates on &lt;a href="https://tools.jboss.org/documentation/whatsnew/jbosstools/4.12.0.Final.html"&gt;this page&lt;/a&gt;.&lt;/p&gt; &lt;h2 id="what-is-next"&gt;What is next?&lt;/h2&gt; &lt;p&gt;Having JBoss Tools 4.12.0 and Red Hat CodeReady Studio 12.12 out we are already working on the next release for Eclipse 2019-09. Stay tuned for more updates.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#38;linkname=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F12%2Fannouncing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06%2F&amp;#038;title=Get%20started%20with%20Red%20Hat%20CodeReady%20Studio%2012.12.0.GA%20and%20JBoss%20Tools%204.12.0.Final%20for%20Eclipse%202019-06" data-a2a-url="https://developers.redhat.com/blog/2019/07/12/announcing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06/" data-a2a-title="Get started with Red Hat CodeReady Studio 12.12.0.GA and JBoss Tools 4.12.0.Final for Eclipse 2019-06"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/12/announcing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06/"&gt;Get started with Red Hat CodeReady Studio 12.12.0.GA and JBoss Tools 4.12.0.Final for Eclipse 2019-06&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/L1ZHumPJNUw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;JBoss Tools 4.12.0 and Red Hat CodeReady Studio 12.12 for Eclipse 2019-06 are here and are waiting for you. In this article, I&amp;#8217;ll cover the highlights of the new releases and show how to get started. Installation Red Hat CodeReady Studio (previously known as Red Hat Developer Studio) comes with everything pre-bundled in its installer. [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/12/announcing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06/"&gt;Get started with Red Hat CodeReady Studio 12.12.0.GA and JBoss Tools 4.12.0.Final for Eclipse 2019-06&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/12/announcing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">608207</post-id><dc:creator>Jeff Maury</dc:creator><dc:date>2019-07-12T07:00:00Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/12/announcing-red-hat-codeready-studio-12-12-0-ga-and-jboss-tools-4-12-0-final-for-eclipse-2019-06/</feedburner:origLink></entry><entry><title>Deploying an internal container registry with Minikube add-ons</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/cY5dQAWMCyw/" /><category term="Containers" /><category term="Kubernetes" /><category term="kubernetes" /><category term="minikube" /><category term="registry" /><author><name>Kamesh Sampath</name></author><id>https://developers.redhat.com/blog/?p=608717</id><updated>2019-07-11T07:00:14Z</updated><published>2019-07-11T07:00:14Z</published><content type="html">&lt;p&gt;&lt;a href="https://github.com/kubernetes/minikube"&gt;Minikube&lt;/a&gt; has a feature called &lt;a href="https://github.com/kubernetes/minikube/blob/master/docs/addons.md"&gt;add-ons,&lt;/a&gt; which help in adding extra components and features to Minikube’s Kubernetes cluster.&lt;/p&gt; &lt;p&gt;The &lt;em&gt;registry&lt;/em&gt; add-on will deploy an internal registry, which can then be used to push and pull Linux container images. But at times, we might wish to mimic push and pull to different registries (i.e., using aliases for container registry). In this article, I will walk you through the steps required to achieve the same.&lt;span id="more-608717"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="what-do-i-need"&gt;What do we need?&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Minikube, preferred version is v1.1.1&lt;/li&gt; &lt;li&gt;Git to clone the sources&lt;/li&gt; &lt;li&gt;&lt;a href="https://kubernetes.io/docs/tasks/tools/install-kubectl/"&gt;kubectl&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/ahmetb/kubectx/blob/master/kubens"&gt;kubens&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/tektoncd/cli"&gt;tkn CLI&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="what-we-will-do"&gt;What we will do?&lt;/h2&gt; &lt;p&gt;As part of this exercise we will:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Enable registry via Minikube add-on.&lt;/li&gt; &lt;li&gt;Update the Minikube node’s etc/hosts for the domains dev.local, example.com to resolve to the internal registry.&lt;/li&gt; &lt;li&gt;Update CoreDNS to rules that will allow pods to push images( typical case of CI/CD) to the registry using aliases.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="deploy-container-registry"&gt;Deploy container registry&lt;/h2&gt; &lt;p&gt;As described previously, we can use Minikube add-ons to deploy and enable the internal registry. The internal registry by default gets deployed in &lt;code&gt;kube-system&lt;/code&gt; namespace.&lt;/p&gt; &lt;pre&gt;minikube profile demo minikube start -p demo --memory=8192 --cpus=6 --disk-size=50g&lt;/pre&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you like to use &lt;a href="https://cri-o.io/"&gt;cri-o&lt;/a&gt;, then adjust the above command to be like:&lt;/p&gt; &lt;pre&gt;minikube profile demo minikube start -p demo --memory=8192 --cpus=6 --container-runtime=crio &lt;/pre&gt; &lt;p&gt;With Minikube running, the next step is to deploy the registry.&lt;/p&gt; &lt;pre&gt;minikube addons enable registry&lt;/pre&gt; &lt;p&gt;Once the registry is enabled, you will see a registry pod &lt;code&gt;kubectl -n kube-system get pod&lt;/code&gt; and a corresponding service &lt;code&gt;kubectl -n kube-system get svc&lt;/code&gt; in the kube-system namespace.&lt;/p&gt; &lt;p&gt;The &lt;a href="https://github.com/kameshsampath/minikube-helpers"&gt;minkube-helper&lt;/a&gt; repo in GitHub has the sources along with the example application to test the configuration. Clone the sources and navigate to the &lt;code&gt;registry&lt;/code&gt; sub-folder. For easier reference, we will call the sources folder as $PROJECT_HOME:&lt;/p&gt; &lt;pre&gt;git clone https://github.com/kameshsampath/minikube-helpers &amp;#38;&amp;#38; \ cd minikube-helpers/registry&lt;/pre&gt; &lt;h2 id="creating-aliases-configmap"&gt;Create aliases ConfigMap&lt;/h2&gt; &lt;p&gt;The alias names that we want to use for the registry are configured via the ConfigMap, called &lt;code&gt;registry-aliases&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 data: # Add additonal hosts seperated by new-line registryAliases: &amp;#62;- dev.local example.com # default registry address in minikube when enabled via minikube addons enable registry registrySvc: registry.kube-system.svc.cluster.local kind: ConfigMap metadata: name: registry-aliases namespace: kube-system &lt;/pre&gt; &lt;pre&gt;kubectl apply -f registry-aliases-config.yaml&lt;/pre&gt; &lt;h2 id="update-minikube-etchosts-file"&gt;Update Minikube /etc/hosts file&lt;/h2&gt; &lt;p&gt;To make the aliases resolve to the &lt;code&gt;registry&lt;/code&gt; service in &lt;code&gt;kube-system&lt;/code&gt; namespace, we need to add the aliases entries in the Minkube VM’s &lt;code&gt;/etc/hosts&lt;/code&gt; file. We will use &lt;a href="https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"&gt;DaemonSet&lt;/a&gt; to update the &lt;code&gt;etc/hosts&lt;/code&gt; file inside the Minikube VM.&lt;/p&gt; &lt;pre&gt;kubectl apply -f node-etc-hosts-update.yaml&lt;/pre&gt; &lt;p&gt;As it will take few minutes for the DaemonSet to be running, you can watch the status using the command:&lt;/p&gt; &lt;pre&gt;kubectl -n kube-system get pods --watch&lt;/pre&gt; &lt;p&gt;Once the DaemonSet is successfully running, you can check the Minkube VM&amp;#8217;s &lt;code&gt;/etc/hosts&lt;/code&gt; file, which will now be updated to point to CLUSTER-IP of the registry service.&lt;/p&gt; &lt;pre&gt;minikube ssh -- cat /etc/hosts&lt;/pre&gt; &lt;h3&gt;Tips&lt;/h3&gt; &lt;ul&gt; &lt;li style="text-align: left;"&gt;You can use &lt;span class="keycombo"&gt;CTRL+C&lt;/span&gt; to terminate the watch.&lt;/li&gt; &lt;li style="text-align: left;"&gt;You can check the CLUSTER-IP of the &lt;code&gt;registry&lt;/code&gt; service using the command &lt;code&gt;kubectl -n kube-system get svc registry -o jsonpath='{.spec.clusterIP}'&lt;/code&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;h2 id="patching-coredns"&gt;Patch CoreDNS&lt;/h2&gt; &lt;p&gt;The configurations and other settings we applied in the previous section are good enough for the container runtime to push and pull the images. A typical CI/CD scenario will be something like a Kubernetes pod doing a build, e.g., Jenkins, Tekton and pushing the container image to the registry post as part of the pipeline.&lt;/p&gt; &lt;p&gt;To make the pod resolve the aliases like dev.local, example.com, we need to have the &lt;a href="https://coredns.io/"&gt;CoreDNS&lt;/a&gt; rules configured. For our alias configuration to work, we will use the CoreDNS &lt;a href="https://coredns.io/plugins/rewrite/"&gt;rewrite&lt;/a&gt; rules.&lt;/p&gt; &lt;p&gt;Running the following command will have the CoreDNS patched with the rewrite rules.&lt;/p&gt; &lt;pre&gt;./patch-coredns.sh&lt;/pre&gt; &lt;p&gt;The CoreDNS patch can be queried to see the updates. A successful update will show output for the command &lt;code&gt;kubectl -n kube-sytem configmap coredns -oyaml&lt;/code&gt; as shown below:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 data: Corefile: |- .:53 { errors health rewrite name dev.local registry.kube-system.svc.cluster.local rewrite name example.com registry.kube-system.svc.cluster.local kubernetes cluster.local in-addr.arpa ip6.arpa { pods insecure upstream fallthrough in-addr.arpa ip6.arpa } prometheus :9153 forward . /etc/resolv.conf cache 30 loop reload loadbalance } kind: ConfigMap metadata: name: coredns namespace: kube-system&lt;/pre&gt; &lt;h2 id="testing-the-configuration"&gt;Test the configuration&lt;/h2&gt; &lt;p&gt;I found the real need of this registry hack was when I was trying to deploy &lt;a href="https://github.com/tektoncd/pipeline"&gt;Tekton pipelines&lt;/a&gt;. Tekton is Kubernetes&amp;#8217; native way of declaring CI/CD pipelines.&lt;/p&gt; &lt;p&gt;As part of my pipeline (see &lt;a href="https://github.com/kameshsampath/minikube-helpers/tree/master/registry/example"&gt;example&lt;/a&gt;), I want to build and deploy a simple Hello World application.&lt;/p&gt; &lt;h2 id="deploy-tekton-pipelines"&gt;Deploy Tekton pipelines&lt;/h2&gt; &lt;pre&gt;kubectl apply --filename https://storage.googleapis.com/tekton-releases/latest/release.yaml&lt;/pre&gt; &lt;p&gt;The status of Tekton pipelines can be watched using:&lt;/p&gt; &lt;pre&gt;kubectl get pods --namespace tekton-pipelines -w&lt;/pre&gt; &lt;h2 id="deploy-application-pipeline"&gt;Deploy application pipeline&lt;/h2&gt; &lt;pre&gt;kubectl apply -f https://raw.githubusercontent.com/tektoncd/catalog/master/golang/build.yaml \ --filename example/build.yaml&lt;/pre&gt; &lt;p&gt;As it will take some time for the pipeline to complete, you can watch the status using the command:&lt;/p&gt; &lt;pre&gt;tkn taskrun logs -f -a hello-world&lt;/pre&gt; &lt;p&gt;A successful pipeline build will have the Hello World application deployed. You can use the following Minikube shortcut:&lt;/p&gt; &lt;pre&gt;curl $(minikube service helloworld --url)&lt;/pre&gt; &lt;p&gt;to call the service, which returns a “Hello World” as the response.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When you see &lt;code&gt;tkn logs -f -a hello-world&lt;/code&gt; showing a blank screen, it might be that it&amp;#8217;s pulling the required images. To know what&amp;#8217;s happening, you can use &lt;code&gt;kubectl get events -w&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;I hope this article will help with similar development environment use cases that you might have. Next time, we will take a deep dive into Tekton. Until then, happy Kubernetes hacking!&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#38;linkname=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2019%2F07%2F11%2Fdeploying-an-internal-container-registry-with-minikube-add-ons%2F&amp;#038;title=Deploying%20an%20internal%20container%20registry%20with%20Minikube%20add-ons" data-a2a-url="https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/" data-a2a-title="Deploying an internal container registry with Minikube add-ons"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/"&gt;Deploying an internal container registry with Minikube add-ons&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/cY5dQAWMCyw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Minikube has a feature called add-ons, which help in adding extra components and features to Minikube’s Kubernetes cluster. The registry add-on will deploy an internal registry, which can then be used to push and pull Linux container images. But at times, we might wish to mimic push and pull to different registries (i.e., using aliases [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/"&gt;Deploying an internal container registry with Minikube add-ons&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">608717</post-id><dc:creator>Kamesh Sampath</dc:creator><dc:date>2019-07-11T07:00:14Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2019/07/11/deploying-an-internal-container-registry-with-minikube-add-ons/</feedburner:origLink></entry><entry><title>Welcome IBM to the Red Hat/JBoss family</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/tD-7vKyivJU/welcome-ibm-to-the-red-hatjboss-family" /><category term="feed_group_name_management" scheme="searchisko:content:tags" /><category term="feed_name_marklittle" scheme="searchisko:content:tags" /><category term="ibm" scheme="searchisko:content:tags" /><author><name>Mark Little</name></author><id>searchisko:content:id:jbossorg_blog-welcome_ibm_to_the_red_hat_jboss_family</id><updated>2019-07-11T11:56:17Z</updated><published>2019-07-10T12:17:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:eafe3058-b996-4139-9bda-b76f72bd7c72] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;It's been quite a hectic time since the original announcement in 2018 that IBM was to acquire Red Hat. &lt;a class="jive-link-external-small" href="http://markclittle.blogspot.com/2018/10/red-hat-and-ibm-really.html" rel="nofollow"&gt;I wrote about this&lt;/a&gt; on my personal blog at the time. I know this has pleased some, confused others, worried people and probably a lot more emotions than that affected yet more. In the meantime both Red Hat and IBM have had to act as independent companies for legal reasons and it's only now that the deal has closed can we really start to collaborate on next steps. However, many of our teams have been working with IBM over the years and have great relationships already as well as agreement on many things around strategy and vision. I'm confident that those things won't diminish now we are part of IBM (or, as I prefer to think of it, IBM is part of the JBoss family!) In fact they're more likely to improve. Whether it's in our upstream communities, the IBM upstream communities, with partners, customers, standards bodies etc. I'm confident that we will grow together and the potential for this combination of Red Hat and IBM is definitely an example of where the sum is greater than the individual parts!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;I really don't have much more to say at the moment. I know many people may still be concerned. All I can say is please trust us/me. We didn't enter into this lightly but I'm sure it's the right thing for us to have done and by that I absolutely mean it's the right thing for our communities too. It's going to be a heck of a ride over the coming months and year; I absolutely want to share that ride with all of you because only together can we make it a success!&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Onward!&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:eafe3058-b996-4139-9bda-b76f72bd7c72] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/tD-7vKyivJU" height="1" width="1" alt=""/&gt;</content><summary>It's been quite a hectic time since the original announcement in 2018 that IBM was to acquire Red Hat. I wrote about this on my personal blog at the time. I know this has pleased some, confused others, worried people and probably a lot more emotions than that affected yet more. In the meantime both Red Hat and IBM have had to act as independent companies for legal reasons and it's only now that th...</summary><dc:creator>Mark Little</dc:creator><dc:date>2019-07-10T12:17:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/mark.little/2019/07/10/welcome-ibm-to-the-red-hatjboss-family</feedburner:origLink></entry></feed>
